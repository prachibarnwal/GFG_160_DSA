/*
Given an array of integers arr[] and a number k, 
count the number of subarrays having XOR of their elements as k.
*/

long subarrayXor(vector<int> &arr, int k) {
        unordered_map<int,int> m;
        
        long cnt = 0, pxor = 0;
        
        for(int i = 0;i<arr.size();i++){
            //calc xor till the current index
            pxor ^= arr[i];
            //if pxor^k exists in m that means
            //there's a subarray till the index i
            cnt += m[pxor ^ k];
            
            if(pxor == k){
                cnt++;
            }
            //adding xor till ith index to map
            m[pxor]++;
        }
        //tC: O(n); sC: O(n);
        return cnt;
    }
