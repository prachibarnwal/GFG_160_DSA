/*
You are given an integer target and an array arr[]. 
You have to find number of pairs in arr[] which sums up to target. 
It is given that the elements of the arr[] are in sorted order.
Note: pairs should have elements of distinct indexes. 
*/

int countPairs(vector<int> &arr, int k){
        //and here comes the two pointer 
        //technique in the scene again >_<
        int beg = 0, end = arr.size() - 1, res = 0;
        while(beg < end){
            int s = arr[beg] + arr[end];
            
            if(s < k){
                beg++;
            }
            else if(s > k){
                end--;
            } // it's freaking same as that triplet wala code
            else{
                int ele1 = arr[beg], ele2 = arr[end];
                int cnt1 = 0, cnt2 = 0;
                while(beg <= end && arr[beg] == ele1){
                    cnt1++;
                    beg++;
                }
                while(beg <= end && arr[end] == ele2){
                    cnt2++;
                    end--;
                }
                if(ele1 == ele2){
                    res += (cnt1 * (cnt1 - 1)) / 2;
                }
                else{
                    res += (cnt1 * cnt2);
                }
            }
        }
        return res;
    }
