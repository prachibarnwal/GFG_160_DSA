/*
Given a head of the singly linked list. If a loop is present in the list then return 
the first node of the loop else return NULL.

Custom Input format:
A head of a singly linked list and a pos (1-based index) which denotes the 
position of the node to which the last node points to. If pos = 0, 
it means the last node points to null, indicating there is no loop.
*/

Node* findFirstNode(Node* head) {
        Node *f = head, *s = head;
        while(f != nullptr && f->next != nullptr){
            s = s -> next;
            f = f -> next -> next;
            if(s == f){
                s = head;
                while(s != f){
                    s = s -> next;
                    f = f -> next;
                }
                return s;
            }//tc: O(n);
        }//sc: O(1);
        return NULL;
    }
