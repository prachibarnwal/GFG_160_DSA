/*
Given a strictly sorted 2D matrix mat[][] of size n x m and a number x. 
Find whether the number x is present in the matrix or not.
Note: In a strictly sorted matrix, each row is sorted in strictly 
increasing order, and the first element of the ith row (i!=0) is 
greater than the last element of the (i-1)th row.
*/

bool search(vector<int> &arr, int x){
        int beg = 0, end = arr.size()-1, med;
        while(beg <= end){
            med = (beg+end)/2;
            if(arr[med] == x)
                return true;
            else if(arr[med] > x)
                end = med - 1;
            else
                beg = med+1;
        }return false;
    }
    
    bool searchMatrix(vector<vector<int>> &mat, int x) {
        int n = mat.size(), a = -1, row = -1;
        int beg = 0, end = n-1, med;
        while(beg<=end){
            med = (beg+end) / 2;
            if(mat[med][0] == x)
                return true;
            else if(mat[med][0] < x){
                beg = med+1;
                row = med;
            }
            else
                end = med-1;
        }
        if(row==-1)
            return false;
        
        return search(mat[row], x);
    }
    //most cluttered code EVER ig ~_~~
    //tC: o(log m + log n);
    //sc: o(1);
