/*
You are given a rectangular matrix mat[][] of size n x m, and your task 
is to return an array while traversing the matrix in spiral form.
*/

vector<int> spirallyTraverse(vector<vector<int> > &mat) {
        int row = mat.size();
        int col = mat[0].size();
        
        int top = 0, bottom = row - 1;
        int left = 0, right = col - 1;
        //using boundary traversal
        vector<int> res;
        while(top <= bottom && left <= right){
            for(int i = left; i <= right;i++){
                res.push_back(mat[top][i]);
            }
            top++;
            for(int i = top; i <= bottom; i++){
                res.push_back(mat[i][right]);
            }
            right--;
            if(top <= bottom){
                for(int i = right; i >= left; i--){
                    res.push_back(mat[bottom][i]);
                }
                bottom--;
            }
            if(left <= right){
                for(int i = bottom; i >= top; i--){
                    res.push_back(mat[i][left]);
                }
                left++;
            }
        }
        return res;
        //tC: O(M*N);
        //sC: O(1);
    }
