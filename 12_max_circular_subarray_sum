int circularSubarraySum(vector<int> &arr) {

        int n = arr.size();
        int totalSum = 0;
        int curminSum = 0;
        int curmaxSum = 0;
        int minSum = arr[0];
        int maxSum = arr[0];
        
        for(int i = 0;i<n;i++){
            //Kadane's to find min subarray sum
            curminSum = min(curminSum + arr[i], arr[i]);
            minSum = min(minSum, curminSum);
            //Kadane's to find max subarray sum
            curmaxSum = max(curmaxSum + arr[i], arr[i]);
            maxSum = max(maxSum, curmaxSum);
            //total array sum
            totalSum += arr[i];
        }
        
        int cirSum = totalSum - minSum;
        if(minSum == totalSum)
            return maxSum;
        return max(maxSum, cirSum);
    }
