/*
Given an array arr[] of non-negative integers. Find the length of the 
longest sub-sequence such that elements in the subsequence are 
consecutive integers, the consecutive numbers can be in any order.
*/

int longestConsecutive(vector<int>& arr){
        unordered_set<int> s(arr.begin(), arr.end());
        //a good one though ~_~~
        int res = 0;

        for(int i = 0;i<arr.size();i++){
            //in case starting element is the current element
            if(s.find(arr[i] - 1) == s.end()){
                int j = arr[i];
                //increasing j till its last subsequence
                while(s.find(j) != s.end()){
                    j++;
                }
                //updating res as the max subsequence count
                res = max(res, j - arr[i]);
            }
        }
        //tC: O(N);
        //sC: O(N);
        return res;
    }
