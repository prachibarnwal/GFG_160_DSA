'''
Given two strings s1 and s2 consisting of lowercase characters. The task is to check 
whether two given strings are an anagram of each other or not. An anagram of a string 
is another string that contains the same characters, only the order of characters can 
be different. For example, "act" and "tac" are an anagram of each other. Strings s1 and 
s2 can only contain lowercase alphabets.

Note: You can assume both the strings s1 & s2 are non-empty.
'''
class Solution:
    
    def areAnagrams(self, s1, s2):
        d1 = {}
        
        for i in s1:
            if i not in d1:
                d1[i] = 1
            else:
                d1[i] += 1
        
        for i in s2:
            d1[i] = d1.get(i, 0) - 1
            
        for i in d1:
            if d1[i] != 0:
                return 0
        return 1    

#time complexity : O(M+N) 
# where m = len(s1) and n = len(s2)
#space complexity : O(1)
