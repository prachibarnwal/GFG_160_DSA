/*
Given the head of two sorted linked lists consisting of nodes respectively. 
The task is to merge both lists and return the head of the sorted merged list.
*/

Node* sortedMerge(Node* head1, Node* head2){
        if(!head1){
            return head2;
        }
        if(head2 == NULL)
            return head1;
        
        Node *temp = new Node(0);
        Node *curr = temp;
        while(head1 && head2){
            if(head1 -> data < head2 -> data){
                curr -> next = head1;
                head1 = head1 -> next;
            }
            else{
                curr -> next = head2;
                head2 = head2 -> next;
            }
            curr = curr -> next;
        }
        //if first ll still has elements
        if(head1){
            curr -> next = head1;
        }
        //if second ll still has elements
        if(head2){
            curr -> next = head2;
        }
        
        return temp -> next;
    }//tc: O(n); sc: O(1);
