/*
Given an array, arr[] construct a product array, res[] where each 
element in res[i] is the product of all elements in arr[] except 
arr[i]. Return this resultant array, res[].
Note: Each element is res[] lies inside the 32-bit integer range.
*/

vector<int> productExceptSelf(vector<int>& arr) {
        int z = 0, index = -1, prod = 1;
        
        for(int i = 0;i<arr.size();i++){
            if(arr[i] == 0){
                z++;
                index = i;
            }
            else{
                prod *= arr[i];
            }
        }
        
        vector<int> ress(arr.size(), 0);
        if(z == 0){
            for(int i = 0;i<arr.size();i++){
                ress[i] = prod / arr[i];
            }
        }
        else if(z == 1){
            ress[index] = prod;
        }//tc: O(n); sc:O(1);
        return ress;
    }
